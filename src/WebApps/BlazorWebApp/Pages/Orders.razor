@page "/orders"

@inject OrderingService OrderingService

<PageTitle>Orders</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Shopping Cart</MudText>
<MudText Class="mb-12">Here you can find all the orders already made.</MudText>

@if (!_orders.Any())
{
    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Style="width: 80%">
        <MudAlert Severity="Severity.Normal" Style="width: 270px">You have not placed any order yet.</MudAlert>
    </MudStack>
}
else
{
    <MudStack Style="width: 80%">
        <MudTable Items="@_orders" Hover="true" Breakpoint="Breakpoint.Sm">
            <HeaderContent>
                <MudTh>Order Number</MudTh>
                <MudTh>Order Date</MudTh>
                <MudTh>Price</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Order Number">#@context.OrderId</MudTd>
                <MudTd DataLabel="Order Date">@context.OrderDate</MudTd>
                <MudTd DataLabel="Price">@context.TotalPrice</MudTd>
            </RowTemplate>
        </MudTable>
    </MudStack>
}

@code {
    private List<OrderListDto> _orders = new List<OrderListDto>();

    protected override async Task OnInitializedAsync()
    {
        _orders = await OrderingService.GetCurrentUserOrders();
    }
}
